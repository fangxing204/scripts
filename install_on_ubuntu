#!/bin/bash

function log {
  msg="$1"
  echo "********************************************"
  echo "$msg"
  echo "********************************************"
  echo ""
}
log "Adding the repos to /etc/apt/sources.list.d/"

RELEASE="$(lsb_release -sc)"
ME="$(whoami)"
mkdir -p ~/projects
mkdir -p ~/src

function add_ppa {
  ppa="$1"
  pattern="$2"
  if [ -z $(ls /etc/apt/sources.list.d | grep '$pattern') ]; then
    log "Adding $ppa"
    sudo sh -c "add-apt-repository ppa:$ppa"
  fi
}

function add_key {
  url="$1"
  wget -qO - "$url" | sudo apt-key add -
}

add_ppa "git-core/ppa" "git"
add_ppa "indicator-multiload/stable-daily" "indicator-multiload"
add_ppa "shutter/ppa" "shutter"
add_ppa "yorba/ppa" "yorba"
add_ppa "ubuntuhandbook1/corebird" "corebird"
add_ppa "tmate.io/archive" "tmate"
add_ppa "saiarcot895/myppa" "saiarcot895" # for apt-fast
add_ppa "fossfreedom/byzanz" "byzanz"
add_ppa "kilian/f.lux" "f_lux"
add_ppa "yktooo/ppa", "sound-switcher"
sudo sed -i 's/vivid/trusty/' /etc/apt/sources.list.d/kilian-ubuntu-f_lux-vivid.list
sudo sed -i 's/vivid/trusty/' /etc/apt/sources.list.d/fossfreedom-ubuntu-byzanz-vivid.list

if [ -z "$(apt-key list | grep postgres)" ]; then
  add_key "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
fi

if [ -z "$(ls /etc/apt/sources.list.d/insync.list)" ]; then
  add_key "https://d2t3ff60b2tol4.cloudfront.net/services@insynchq.com.gpg.key"
  sudo sh -c "echo 'deb http://apt.insynchq.com/ubuntu $RELEASE non-free' > /etc/apt/sources.list.d/insync.list"
fi

if [ -z "$(ls /etc/apt/sources.list.d/google-chrome.list)" ]; then
  add_key "https://dl-ssl.google.com/linux/linux_signing_key.pub"
  sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb stable main" > /etc/apt/sources.list.d/google-chrome.list'
fi

log "Removing firefox"
sudo apt-get remove -y firefox

log "Removing LibreOffice"
sudo dpkg -l | grep office | awk '{ print $2 }' | xargs sudo apt-get remove -y

log "Installing the software"
sudo apt-get update
log "Installing apt-fast"
sudo apt-get install -y apt-fast
log "Upgrade"
sudo apt-get upgrade
log "Dist upgrade"
sudo apt-get dist-upgrade

log "Install all the things"
sudo apt-fast install -y \
                      build-essential \
                      bison \
                      vim-gtk \
                      vlc \
                      shutter \
                      xclip \
                      unison \
                      kid3-qt \
                      htop \
                      curl \
                      git \
                      git-doc \
                      git-svn \
                      git-gui \
                      gitg \
                      libffi-dev \
                      libreadline-dev \
                      libssl-dev \
                      zlib1g-dev \
                      libncurses5-dev \
                      libxml2-dev \
                      libxslt1-dev \
                      libyaml-dev \
                      libgdbm-dev \
                      indicator-multiload \
                      parallel \
                      fish \
                      silversearcher-ag \
                      unetbootin \
                      insync \
                      postgresql-9.4 \
                      pgadmin3 \
                      ttf-ancient-fonts \
                      libxcb1-dev \
                      libxcb-randr0-dev \
                      libx11-dev \
                      autoconf \
                      autopoint \
                      libtool \
                      exuberant-ctags \
                      xdotool \
                      wmctrl \
                      geary \
                      california \
                      corebird \
                      openconnect \
                      network-manager-openconnect \
                      network-manager-openconnect-gnome \
                      unity-tweak-tool \
                      laptop-mode-tools \
                      bleachbit \
                      python-software-properties \
                      tmux \
                      tmate \
                      direnv \
                      google-chrome-stable \
                      font-manager \
                      indicator-sound-switcher \
                      software-properties-common

if [ -z "$(which heroku)" ]; then
  log "Installing Heroku Toolbelt"
  wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
fi

if [ -z "$(which vboxmanage)" ]; then
  sudo sh -c "echo 'deb http://download.virtualbox.org/virtualbox/debian $RELEASE contrib' > /etc/apt/sources.list.d/virtualbox.list"

  log "Install the apt-secure key"
  add_key "http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc"

  sudo apt-get update
  sudo apt-fast install -y dkms virtualbox-4.3
fi


if [ -z "$(which sqlite3)" ]; then
  version="3081000"
  package="sqlite-autoconf-$version"
  tarball="$package.tar.gz"
  sudo apt-fast install -y \
    libsqlite3-dev

  cd "$HOME/src"
  rm -rf sqlite*
  wget http://www.sqlite.org/2015/$tarball
  tar xzf $tarball

  cd $package
  ./configure && make && sudo make install
fi

function install_postmodern_package {
  package="$1"
  version="$2"
  tarball="${package}-${version}.tar.gz"
  wget -O "$tarball" "https://github.com/postmodern/${package}/archive/v${version}.tar.gz"
  tar -xzvf "$tarball"
  cd "${package}-${version}/"
  sudo make install
}

if [ -z "$(which ruby-install)" ]; then
  log "Installing ruby-install"
  install_postmodern_package "ruby-install" "0.5.0"
fi

if [ -z "$(which chruby-exec)" ]; then
  log "Installing chruby"
  install_postmodern_package "chruby" "0.3.9"
fi

if [ -z "$(ls ~/.oh-my-fish)" ]; then
  log "Install oh-my-fish"
  curl -L http://git.io/omf | sh
fi

if [ -z "$(ls ~/projects/dotfiles)" ]; then
  log "Installing dotfiles"
  git clone https://github.com/jc00ke/dotfiles.git ~/projects/dotfiles
  source ~/projects/dotfiles/install
fi

if [ -z "$(ls ~/.vim/bundle/Vundle.vim)" ]; then
  log "Installing Vundle"
  git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  vim +PluginInstall +qall
fi

if [ -z "$(ls ~/.config/fish)" ]; then
  log "Installing fish config"
  git clone https://github.com/jc00ke/fish-config.git ~/.config/fish
  chsh -s /usr/bin/fish
fi

log "Installing jq"
wget http://stedolan.github.io/jq/download/linux64/jq
chmod +x jq
sudo mv jq /usr/local/bin/

if [ -z "$(which direnv)" ]; then
  url="$(
    curl -s "https://api.github.com/repos/zimbatm/direnv/releases/latest" | \
    jq '.assets | .[] | { name: .name, url: .browser_download_url } | select(.name == "direnv.linux-amd64") | .url' \
    )"
  wget $url
  chmod +x direnv.linux-amd64
  sudo mv direnv.linux-amd64 /usr/local/bin/direnv
fi

sudo apt-fast install -y byzanz fluxgui

log "Install some fonts"
log "http://sourcefoundry.org/hack/"
